<UserControl x:Class="BoardGameFrontend.Windows.BoardControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:BoardGameFrontend.Converters"
             xmlns:models="clr-namespace:BoardGameFrontend.Models"
             xmlns:helpers="clr-namespace:BoardGameFrontend.Helpers"
             xmlns:behaviors="clr-namespace:BoardGameFrontend.Behaviors">
    <UserControl.Resources>

        <converters:BoolToColorConverter x:Key="BoolToColorConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:DivideByFourConverter x:Key="DivideByFourConverter"/>
        <converters:ContainsTileConverter x:Key="ContainsTileConverter"/>
        <converters:CroppedConverter x:Key="CroppedConverter"/>
        <converters:StringToUriConverter x:Key="StringToUriConverter"/>
        <converters:TupleConverter x:Key="TupleConverter"/>
        <converters:HeroCropConverter x:Key="HeroCropConverter"/>
        <converters:HeroCropImageConverter x:Key="HeroCropImageConverter"/>
        <converters:IsNullConverter x:Key="isNullConverter"/>
        <converters:HasAuraConverter x:Key="HasAuraConverter"/>
        <converters:CombinedConditionsConverter x:Key="CombinedConditionsConverter"/>
        <converters:GreaterThanOrEqualConverter x:Key="GreaterThanOrEqualConverter"/>
        <converters:NumberToImagePathConverter x:Key="NumberToImagePathConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Column="0"
                      x:Name="scrollViewer"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                      PanningMode="Both"
                      Background="Gray"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      behaviors:ZoomAndPanBehavior.EnableZoomAndPan="True">
            <Grid x:Name="boardGrid"
                  HorizontalAlignment="Stretch"
                  Height="500"
                  Width="500"
                  VerticalAlignment="Stretch">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="scaleTransform"/>
                        <TranslateTransform x:Name="translateTransform"/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.Background>
                    <ImageBrush Stretch="Uniform"
                                ImageSource="pack://application:,,,/Assets/Board/Board.png"/>
                </Grid.Background>
                <Canvas x:Name="GameCanvas"
                        ClipToBounds="False">

                    <Image x:Name="draggableImage"
                           Width="{x:Static helpers:ImagePositionHelper.ImageWidth}"
                           Height="{x:Static helpers:ImagePositionHelper.ImageHeight}"
                           Source="pack://application:,,,/Assets/Pawn/Pawn.png"
                           IsHitTestVisible="True"
                           Focusable="True"
                           Canvas.ZIndex="3"
                           behaviors:DragBehavior.IsDragEnabled="True"
                           Canvas.Left="{Binding DataContext.Game.PawnManager.CurrentTile.OffsetX, 
                     RelativeSource={RelativeSource AncestorType=Window}, 
                     Converter={StaticResource DivideByFourConverter}, 
                     ConverterParameter='32,0'}"
                           Canvas.Top="{Binding DataContext.Game.PawnManager.CurrentTile.OffsetY, 
                    RelativeSource={RelativeSource AncestorType=Window}, 
                    Converter={StaticResource DivideByFourConverter}, 
                    ConverterParameter='32,0'}"/>
                    <StackPanel x:Name="TargetStackPanel"
                                Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="Yellow"
                                Canvas.ZIndex="5"
                                ClipToBounds="False"
                                Canvas.Left="{Binding DataContext.Game.PawnManager.StackPanelLeft, 
                     RelativeSource={RelativeSource AncestorType=Window}, 
                     Converter={StaticResource DivideByFourConverter}, 
                     ConverterParameter='20,0'}"
                                Canvas.Top="{Binding DataContext.Game.PawnManager.StackPanelTop, 
                    RelativeSource={RelativeSource AncestorType=Window}, 
                    Converter={StaticResource DivideByFourConverter}, 
                    ConverterParameter='20,0'}"
                                Visibility="{Binding DataContext.Game.PawnManager.ShowBoots, 
                             RelativeSource={RelativeSource AncestorType=Window}, 
                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button Click="FullMovement_Click"
                                IsEnabled="{Binding DataContext.Game.PawnManager.FullBootAvailable, 
                   RelativeSource={RelativeSource AncestorType=Window}}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <!-- Change the opacity of the content when disabled -->
                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter Property="Opacity"
                                                    Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>

                            <!-- StackPanel to hold Image and TextBlock side by side -->
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <!-- TextBlock on the left -->
                                <TextBlock Text="{Binding DataContext.Game.UserControlledPlayer.PlayerHeroCardManager.CurrentHeroCard.MovementFullLeft, 
                                  RelativeSource={RelativeSource AncestorType=Window}}"
                                           FontSize="11"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontWeight="Bold"
                                           Foreground="Black"
                                           Margin="0,0,2,0"/>
                                <Image Width="30"
                                       Height="30">
                                    <Image.Source>
                                        <MultiBinding Converter="{StaticResource CroppedConverter}">
                                            <Binding Path="."
                                                     Converter="{StaticResource HeroCropConverter}"
                                                     ConverterParameter="MovementLeft"/>
                                            <Binding Path="."
                                                     Converter="{StaticResource HeroCropImageConverter}"
                                                     ConverterParameter="MovementLeft"/>
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Button>

                        <Button Click="AdjacentMovement_Click"
                                IsEnabled="{Binding DataContext.Game.PawnManager.AdjacentMovementAvailable, 
                   RelativeSource={RelativeSource AncestorType=Window}}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Visibility"
                                Value="Collapsed"/>
                                    <Style.Triggers>

                                        <DataTrigger Value="Visible">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource CombinedConditionsConverter}">
                                                    <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                             Path="DataContext.Game.IsUserControlledPlayersTurn"/>
                                                    <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                             Path="DataContext.Game.UserControlledPlayer.PlayerAuraManager.AurasTypes"/>
                                                    <Binding>
                                                        <Binding.Source>
                                                            <x:Static Member="models:AurasType.ADJACENT_TILE_REWARD"/>
                                                        </Binding.Source>
                                                    </Binding>
                                                    <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                             Path="DataContext.Game.PhaseManager.CurrentPhase"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility"
                                                    Value="Visible"/>
                                        </DataTrigger>


                                        <!-- Change the opacity of the content when disabled -->
                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter Property="Opacity"
                                                    Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>

                            <!-- StackPanel to hold Image and TextBlock side by side -->
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <!-- TextBlock on the left -->
                                <TextBlock Text="{Binding DataContext.Game.UserControlledPlayer.PlayerHeroCardManager.CurrentHeroCard.MovementFullLeft, 
                                  RelativeSource={RelativeSource AncestorType=Window}}"
                                           FontSize="11"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontWeight="Bold"
                                           Foreground="Black"
                                           Margin="0,0,2,0"/>
                                <Image Width="30"
                                       Height="30">
                                    <Image.Source>
                                        <MultiBinding Converter="{StaticResource CroppedConverter}">
                                            <Binding Path="."
                                                     Converter="{StaticResource HeroCropConverter}"
                                                     ConverterParameter="AdjacentMovement"/>
                                            <Binding Path="."
                                                     Converter="{StaticResource HeroCropImageConverter}"
                                                     ConverterParameter="AdjacentMovement"/>
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Button>

                        <Border Width="3"
                                Background="Gray"
                                Margin="0,0"/>

                        <!-- Second Button with Image -->
                        <Button Click="UnFullMovement_Click"
                                Panel.ZIndex="10"
                                IsEnabled="{Binding DataContext.Game.PawnManager.UnFullBootAvailable, 
                   RelativeSource={RelativeSource AncestorType=Window}}">
                            <Button.CommandParameter>
                                <MultiBinding Converter="{StaticResource TupleConverter}">
                                    <Binding Path="False"/>
                                    <Binding Path="DataContext.Game.PawnManager.CurrentTile.Id"
                                             RelativeSource="{RelativeSource AncestorType=Window}"/>
                                </MultiBinding>
                            </Button.CommandParameter>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <!-- Change the opacity of the content when disabled -->
                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter Property="Opacity"
                                                    Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>

                            <!-- StackPanel to hold Image and TextBlock side by side -->
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <!-- TextBlock on the left -->
                                <TextBlock Text="{Binding DataContext.Game.UserControlledPlayer.PlayerHeroCardManager.CurrentHeroCard.MovementUnFullLeft, 
                                  RelativeSource={RelativeSource AncestorType=Window}}"
                                           FontSize="11"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontWeight="Bold"
                                           Foreground="Black"
                                           Margin="0,0,2,0"/>
                                <Image Width="30"
                                       Height="30">
                                    <Image.Source>
                                        <MultiBinding Converter="{StaticResource CroppedConverter}">
                                            <Binding Path="."
                                                     Converter="{StaticResource HeroCropConverter}"
                                                     ConverterParameter="MovementUnLeft"/>
                                            <Binding Path="."
                                                     Converter="{StaticResource HeroCropImageConverter}"
                                                     ConverterParameter="MovementUnLeft"/>
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Button>

                        <Border Width="3"
                                Background="Gray"
                                Margin="0,0"/>
                        <Button Background="Red"
                                Panel.ZIndex="10"
                                Click="CancelMovement_Click">
                            <StackPanel>
                                <Image Width="20"
                                       Height="30">
                                    <Image.Source>
                                        <MultiBinding Converter="{StaticResource CroppedConverter}">
                                            <Binding Path="."
                                                     Converter="{StaticResource HeroCropConverter}"
                                                     ConverterParameter="Decline"/>
                                            <Binding Path="."
                                                     Converter="{StaticResource HeroCropImageConverter}"
                                                     ConverterParameter="Decline"/>
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <Image Width="500"
                           Source="{Binding DataContext.Game.PlayerManager.SelectedPlayer.PlayerHeroCardManager.CurrentBorder.ImagePath, RelativeSource={RelativeSource AncestorType=Window}}"
                           Height="500">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility"
                                        Value="Collapsed"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding DataContext.Game.PlayerManager.SelectedPlayer.PlayerHeroCardManager.CurrentBorder, RelativeSource={RelativeSource AncestorType=Window},
                                                Converter={StaticResource isNullConverter}}"
                                                       Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility"
                                                Value="Visible"/>
                                    </MultiDataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>


                    <ItemsControl ItemsSource="{Binding DataContext.Game.GameVisualManager.GameTiles.Tiles, 
                                    RelativeSource={RelativeSource AncestorType=ItemsControl}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="Canvas.Left"
                                        Value="{Binding OffsetX, Converter={StaticResource DivideByFourConverter}, ConverterParameter='32,0'}"/>
                                <Setter Property="Canvas.Top"
                                        Value="{Binding OffsetY, Converter={StaticResource DivideByFourConverter}, ConverterParameter='32,0'}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Width="64"
                                        Height="64"
                                        behaviors:DropBehavior.IsDropEnabled="True"
                                        BorderThickness="0"
                                        CornerRadius="32">

                                    <StackPanel>

                                        <Grid>
                                            <Grid.InputBindings>
                                                <MouseBinding MouseAction="LeftClick"
                                                              Command="{Binding YourCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                              CommandParameter="{Binding Id}"/>
                                            </Grid.InputBindings>
                                            
                                            <Image Width="65"
                                                   Height="65">

                                                <Image.Source>
                                                    <MultiBinding Converter="{StaticResource CroppedConverter}">
                                                        <Binding Path="TileType.CropRect"/>
                                                        <Binding Path="TileType.ImagePathString"
                                                                 Converter="{StaticResource StringToUriConverter}"/>
                                                    </MultiBinding>
                                                </Image.Source>
                                                <Canvas.ZIndex>1</Canvas.ZIndex>
                                            </Image>
                                            <Image Width="65"
                                                   Height="65">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Visibility"
                                                                Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Token, Converter={StaticResource isNullConverter}}"
                                                                               Value="False"/>
                                                                    <Condition Binding="{Binding Token.InStartingPool}"
                                                                               Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Visibility"
                                                                        Value="Visible"/>
                                                            </MultiDataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>

                                                <!-- Your existing MultiBinding for the Image Source -->
                                                <Image.Source>
                                                    <MultiBinding Converter="{StaticResource CroppedConverter}">
                                                        <Binding Path="."
                                                                 Converter="{StaticResource HeroCropConverter}"
                                                                 ConverterParameter="TokenBg"/>
                                                        <Binding Path="."
                                                                 Converter="{StaticResource HeroCropImageConverter}"
                                                                 ConverterParameter="TokenBg"/>
                                                    </MultiBinding>
                                                </Image.Source>
                                                <Canvas.ZIndex>2</Canvas.ZIndex>
                                            </Image>
                                            <Image Width="64"
                                                   Height="64">
                                                <Image.ToolTip>
                                                    <ToolTip Placement="Mouse"
                                                             HasDropShadow="True">
                                                        <TextBlock>
                                                            <Run Text="{Binding Token.ToolTipText}"/>

                                                        </TextBlock>
                                                    </ToolTip>
                                                </Image.ToolTip>
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Token}"
                                                                         Value="{x:Null}">
                                                                <Setter Property="Visibility"
                                                                        Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                                <Image.Source>
                                                    <MultiBinding Converter="{StaticResource CroppedConverter}">
                                                        <Binding Path="Token.DisplayInfo.CropRect"/>
                                                        <Binding Path="Token.DisplayInfo.ImagePathString"
                                                                 Converter="{StaticResource StringToUriConverter}"/>
                                                    </MultiBinding>
                                                </Image.Source>
                                                <Canvas.ZIndex>3</Canvas.ZIndex>
                                            </Image>
                                            <Image Width="64"
                                                   Height="64"
                                                   Source="pack://application:,,,/Assets/Board/Border.png">
                                                <Image.Visibility>
                                                    <MultiBinding Converter="{StaticResource ContainsTileConverter}">
                                                        <Binding Path="Id"/>
                                                        <Binding Path="DataContext.Game.GameVisualManager.TilesBorderManager.TilesWithBorder"
                                                                 RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                    </MultiBinding>
                                                </Image.Visibility>
                                                <Canvas.ZIndex>4</Canvas.ZIndex>
                                            </Image>
                                            <Image Width="64"
                                                   Height="64"
                                                   Source="pack://application:,,,/Assets/Borders/FrameVisitedEmpty.png">
                                                <Image.Visibility>
                                                    <MultiBinding Converter="{StaticResource ContainsTileConverter}">
                                                        <Binding Path="Id"/>
                                                        <Binding Path="DataContext.Game.PlayerManager.SelectedPlayer.PlayerHeroCardManager.CurrentHeroCard.VisitedPlaces"
                                                                 RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                    </MultiBinding>
                                                </Image.Visibility>
                                                <Canvas.ZIndex>4</Canvas.ZIndex>
                                                
                                            </Image>
                                            <Image Width="64"
                                                   Height="64"
                                                   Source="pack://application:,,,/Assets/Borders/FrameVisitedEmpty.png">
                                                <Image.Visibility>
                                                    <MultiBinding Converter="{StaticResource ContainsTileConverter}">
                                                        <Binding Path="Id"/>
                                                        <Binding Path="DataContext.Game.TokenManager.SelectedTokensId"
                                                                 RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                    </MultiBinding>
                                                </Image.Visibility>
                                                <Canvas.ZIndex>5</Canvas.ZIndex>
                                            </Image>
                                        </Grid>

                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Canvas>

            </Grid>
        </ScrollViewer>

        <StackPanel Grid.Column="1"
                    Orientation="Vertical"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Margin="10">
            <StackPanel>
                <Image Width="128" Height="128" Source="{Binding DataContext.Game.PlayerManager.Players.Count, Converter={StaticResource NumberToImagePathConverter}, RelativeSource={RelativeSource AncestorType=Window}}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                        Margin="0,0,0,20">
                <StackPanel Orientation="Horizontal"
                            Background="Gray">
                    <TextBlock Text="{Binding DataContext.Game.PlayerManager.SelectedPlayer.PlayerHeroCardManager.CurrentHeroCard.MovementFullLeft, 
                                  RelativeSource={RelativeSource AncestorType=Window}}"
                               FontSize="11"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontWeight="Bold"
                               Foreground="Black"
                               Margin="0,0,2,0"/>
                    <Image Width="60"
                           Height="60">
                        <Image.Source>
                            <MultiBinding Converter="{StaticResource CroppedConverter}">
                                <Binding Path="."
                                         Converter="{StaticResource HeroCropConverter}"
                                         ConverterParameter="MovementLeft"/>
                                <Binding Path="."
                                         Converter="{StaticResource HeroCropImageConverter}"
                                         ConverterParameter="MovementLeft"/>
                            </MultiBinding>
                        </Image.Source>
                    </Image>
                </StackPanel>
                <Border Width="3"
                        Background="Gray"
                        Margin="0,0"/>
                <StackPanel Orientation="Horizontal"
                            Background="Gray">
                    <TextBlock Text="{Binding DataContext.Game.PlayerManager.SelectedPlayer.PlayerHeroCardManager.CurrentHeroCard.MovementUnFullLeft, 
                                  RelativeSource={RelativeSource AncestorType=Window}}"
                               FontSize="11"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontWeight="Bold"
                               Foreground="Black"
                               Margin="0,0,2,0"/>
                    <Image Width="60"
                           Height="60">
                        <Image.Source>
                            <MultiBinding Converter="{StaticResource CroppedConverter}">
                                <Binding Path="."
                                         Converter="{StaticResource HeroCropConverter}"
                                         ConverterParameter="MovementUnLeft"/>
                                <Binding Path="."
                                         Converter="{StaticResource HeroCropImageConverter}"
                                         ConverterParameter="MovementUnLeft"/>
                            </MultiBinding>
                        </Image.Source>
                    </Image>
                </StackPanel>
            </StackPanel>

            <Button Content="End Movement"
                    Width="160"
                    Command="{Binding DataContext.LobbyService.EndBoardTurnCommand, RelativeSource={RelativeSource AncestorType=Window}}">
                <Button.Style>
                    <Style TargetType="Button"
                           BasedOn="{StaticResource StyledButton}">
                        <Setter Property="IsEnabled"
                                Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DataContext.Game.IsUserControlledPlayersTurn, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="True"/>
                                    <Condition Binding="{Binding DataContext.Game.PhaseManager.CurrentPhase.Name, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="{x:Static models:PhaseType.BoardPhase}"/>
                                    <Condition Binding="{Binding DataContext.Game.MiniPhaseManager.CurrentPhase, Converter={StaticResource isNullConverter}, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled"
                                        Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel Grid.Row="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility"
                                Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DataContext.Game.IsUserControlledPlayersTurn, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="True"/>
                                    <Condition Binding="{Binding DataContext.Game.MiniPhaseManager.CurrentPhase.Name, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="{x:Static models:MiniPhaseType.ReplaceHeroMiniPhase}"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility"
                                        Value="Visible"/>
                            </MultiDataTrigger>

                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Button Content="Replace"
                        CommandParameter="{Binding DataContext.Game.UserControlledPlayer.PlayerHeroCardManager.SelectedHeroCard.Id, RelativeSource={RelativeSource AncestorType=Window}}"
                        Command="{Binding DataContext.LobbyService.ReplaceHeroCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        Margin="10,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource StyledButton}">
                            <Setter Property="IsEnabled"
                                    Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DataContext.Game.UserControlledPlayer.PlayerHeroCardManager.SelectedHeroCard, Converter={StaticResource isNullConverter}, RelativeSource={RelativeSource AncestorType=Window}}"
                                                   Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <StackPanel Grid.Row="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility"
                                Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DataContext.Game.IsUserControlledPlayersTurn, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="True"/>
                                    <Condition Binding="{Binding DataContext.Game.MiniPhaseManager.CurrentPhase.Name, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="{x:Static models:MiniPhaseType.BuffHeroPhase}"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility"
                                        Value="Visible"/>
                            </MultiDataTrigger>

                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Button Content="Buff"
                        CommandParameter="{Binding DataContext.Game.UserControlledPlayer.PlayerHeroCardManager.SelectedHeroCard.Id, RelativeSource={RelativeSource AncestorType=Window}}"
                        Command="{Binding DataContext.LobbyService.BuffHeroCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        Margin="10,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource StyledButton}">
                            <Setter Property="IsEnabled"
                                    Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DataContext.Game.UserControlledPlayer.PlayerHeroCardManager.SelectedHeroCard, Converter={StaticResource isNullConverter}, RelativeSource={RelativeSource AncestorType=Window}}"
                                                   Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel Grid.Row="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility"
                                Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Value="Visible">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource CombinedConditionsConverter}">
                                        <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                 Path="DataContext.Game.IsUserControlledPlayersTurn"/>
                                        <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                 Path="DataContext.Game.UserControlledPlayer.PlayerAuraManager.AurasTypes"/>
                                        <Binding>
                                            <Binding.Source>
                                                <x:Static Member="models:AurasType.GOLD_FOR_MOVEMENT"/>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                 Path="DataContext.Game.PhaseManager.CurrentPhase"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility"
                                        Value="Visible"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Button Content="Convert gold into movement"
                        Command="{Binding DataContext.LobbyService.GoldIntoMovementCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        Margin="10,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource StyledButton}">
                            <Setter Property="IsEnabled"
                                    Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=DataContext.Game.PlayerManager.SelectedPlayer.ResourceManager.GoldAmount, Converter={StaticResource GreaterThanOrEqualConverter}, ConverterParameter=2, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="True">
                                    <Setter Property="IsEnabled"
                                            Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <StackPanel Grid.Row="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility"
                                Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Value="Visible">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource CombinedConditionsConverter}">
                                        <!-- First condition: Is it the user's turn? -->
                                        <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                 Path="DataContext.Game.IsUserControlledPlayersTurn"/>

                                        <!-- Second condition: The collection of aura types -->
                                        <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                 Path="DataContext.Game.UserControlledPlayer.PlayerAuraManager.AurasTypes"/>

                                        <!-- Third condition: The specific aura type to check -->
                                        <Binding>
                                            <Binding.Source>
                                                <x:Static Member="models:AurasType.FULL_MOVEMENT_INTO_EMPTY"/>
                                            </Binding.Source>
                                        </Binding>
                                        <Binding RelativeSource="{RelativeSource AncestorType=Window}"
                                                 Path="DataContext.Game.PhaseManager.CurrentPhase"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility"
                                        Value="Visible"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Button Content="Convert movements"
                        Command="{Binding DataContext.LobbyService.ConvertMovementsCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        Margin="10,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource StyledButton}">
                            <Setter Property="IsEnabled"
                                    Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=DataContext.Game.PlayerManager.SelectedPlayer.PlayerHeroCardManager.CurrentHeroCard.MovementFullLeft, Converter={StaticResource GreaterThanOrEqualConverter}, ConverterParameter=1, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="True">
                                    <Setter Property="IsEnabled"
                                            Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel Grid.Row="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility"
                                Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DataContext.Game.IsUserControlledPlayersTurn, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="True"/>
                                    <Condition Binding="{Binding DataContext.Game.MiniPhaseManager.CurrentPhase.Name, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Value="{x:Static models:MiniPhaseType.SwapTokens}"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility"
                                        Value="Visible"/>
                            </MultiDataTrigger>

                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Button Content="Swap Tokens"
                        Command="{Binding SwapTokensCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        Margin="10,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource StyledButton}">
                            <Setter Property="IsEnabled"
                                    Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=DataContext.Game.TokenManager.CorrectNumberOfSelectedIds, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="True">
                                    <Setter Property="IsEnabled"
                                            Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Content="Stop Swapping Tokens"
                        Command="{Binding DataContext.LobbyService.StopSwappingTokensCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        Margin="10,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource StyledButton}">
                        </Style>
                    </Button.Style>
                </Button>


            </StackPanel>

        </StackPanel>
    </Grid>
</UserControl>